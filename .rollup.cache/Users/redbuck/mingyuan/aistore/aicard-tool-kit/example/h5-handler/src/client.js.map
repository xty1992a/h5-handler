{"version":3,"file":"client.js","sourceRoot":"","sources":["client.ts"],"names":[],"mappings":"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","sourcesContent":["// const WebSocket = require('isomorphic-ws');\n\n// import * as WebSocket from 'isomorphic-ws'\nimport { TinyEmitter } from \"tiny-emitter\";\n\nclass Client extends TinyEmitter {\n  ws: WebSocket | undefined;\n\n  start(url: string, key: string) {\n    this.ws = new WebSocket(url);\n    return this.connect(key);\n  }\n\n  connect(key: string) {\n    return new Promise<void>(resolve => {\n      if (!this.ws) return\n      const ws = this.ws;\n      ws.onopen = () => {\n        console.log(\"connected\");\n        this.send('key', {key})\n      };\n\n      ws.onmessage = (message) => {\n        try {\n          const { type } = JSON.parse(message.data);\n          if (type !== \"connected\") return\n          this.emit(\"connected\");\n          this.listen();\n          resolve()\n        } catch (e) {\n        }\n      };\n    });\n  }\n\n  listen() {\n    if (!this.ws) return\n    const ws = this.ws;\n    ws.onmessage = (message) =>{\n      try {\n        const { type, ...rest } = JSON.parse(message.data);\n        this.emit(type, rest);\n      } catch (e) {\n      }\n      this.emit(\"message\", message.data);\n    };\n    ws.onclose = function close() {\n      console.log(\"disconnected\");\n    };\n  }\n\n  reply = (type: string, fn: Function) => {\n    this.off(type)\n    this.on(type, async (e: any) => {\n      const result = await fn(e.payload)\n      this.send(e.reply, result)\n    })\n  };\n\n  send(type: string, payload: any) {\n    this.ws?.send(JSON.stringify({ type, payload }));\n  }\n\n}\n\nasync function main() {\n  console.log('client start')\n  const url = new URL(location.href);\n  const search = url.searchParams;\n\n  const socket = search.get(\"socket\");\n  const key = search.get(\"socket_key\");\n\n  console.log('socket', socket, key)\n  if (!socket || !key) return console.log('no socket')\n\n  console.log('启动socket')\n  const client = new Client();\n  await client.start(socket, key);\n\n  client.reply('query', (selector: string) => {\n    const el = document.querySelector(selector)\n    if (!el) {\n      console.log('元素不存在')\n      return null;\n    }\n    const rect = el.getBoundingClientRect()\n    const text = (el as HTMLDivElement)?.innerText ?? ''\n    return { rect, text }\n  })\n\n  client.reply('click', (selector: string) => {\n    const el = document.querySelector(selector) as HTMLDivElement\n    el?.click()\n    return 'click:ok'\n  })\n}\n\nmain();\n"]}